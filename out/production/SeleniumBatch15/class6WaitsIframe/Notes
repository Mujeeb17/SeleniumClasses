iframe tag on html
    - is like a website inside a website
    - check syntax practice website for ex.

Example:

<html>
    <body>
        <iframe>
            <html>
                <body>

                blah blah
                code for iframe

                </body>
            </html>
        </iframe>
    </body>
</html>

    - <iframe> tag can be inside its parent <body> tag
    - inside <iframe> tag, you can have another <html> and then a <body> tag
    - can also have nested iframes

    - when it comes to iframes, even though its on the same tab, you
      must use switchTo() commands to switch driver's focus to that iframe

How to use switchTo with iframes
    - Theres no title with iframes so we have to use the .frame() method
      that comes after switchTo().
        - switchTo().frame()
    - 3 ways we can use the frame method
        - by index

Implicit wait
    - sometimes your code will show an error because the code executes
      faster than the webpage can load, especially when new tabs pop up
    - 3 reasons for this error (Element not found)
        - code is too fast
        - incorrect locator
        - might be in an iframe
    - for the reason that the code is too fast. we could use Thread.sleep()
      but that's not always the best approach because we are guessing how long it
      takes to load.
    - implicit wait is going to wait for the web element to be found until the timeout
        - manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
        - above code is saying we are giving it 20 seconds to find
          the web element before it gives the error: Element not found
        - 20 second is the standard

        - implicit wait should only be defined once in the code (like System.setProperty),
          it is a global wait and will be affecting everytime you find a web element
    - having implicit wait is good practice

Explicit wait
    - when the code for a specific text for ex. is disabled, but when we click
      a button, the text is now enabled and we can see it
    - not global
    - explicit wait are conditional waits
        - (wait for element to be visible)
        - (wait for element to be clickable)
        - (wait for element to be enabled)
    - must create WebDriverWait object and pass driver and time limit as the object's parameters
    - if using Selenium 4 : inside parameters, you pass (driver, Durations.ofSeconds(20))
    - use WebDriverWait object.until(ExpectedConditions.) to show you you all different types of conditions

    - use when you want to wait for a condition to be true before proceeding


Note:
    - .switchTo().defaultContent() goes back to the parent website (original/first website)
        - this is needed when switching from Iframe to Iframe, you must switch back to the
          parent frame if you want to switch to another Iframe
    - never use Thread.sleep anymore
    - implicit wait: when code is dynamically generated
    - explicit wait: when code is there the whole time but its disabled
    - global means its implemented automatically to the whole class
    - You are able to have both implicit and explicit wit in a program

    - sometimes Selenium has a bug that doesn't open the specified url,
      you must add the following lines of code

      ChromeOptions options = new ChromeOptions();
      options.addArguments("--remote-allow-origins=*");
      WebDriver driver = new ChromeDriver(options);